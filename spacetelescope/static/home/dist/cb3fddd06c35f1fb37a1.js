import"./bootstrap/css/style.css";import*as THREE from"three";import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls";import model from"./scene.gltf";const scene=new THREE.Scene,sizes={width:window.innerWidth,height:window.innerHeight/2},camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height);camera.position.z=4,scene.add(camera);const canvas=document.querySelector("canvas.webgl"),renderer=new THREE.WebGLRenderer({antialias:!0,canvas:document.getElementById("webgl"),alpha:!0});renderer.setClearColor(0,0),renderer.physicallyCorrectLights=!0,renderer.outputEncoding=THREE.sRGBEncoding,renderer.toneMapping=THREE.ReinhardToneMapping,renderer.toneMappingExposure=3,renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap,renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(window.devicePixelRatio);var obj,loader=new GLTFLoader;loader.load(model,(function(e){(obj=e.scene).scale.set(.3,.3,.3),obj.position.set(0,-1,0),obj.rotation.y=4,scene.add(obj)}));const ambientLight=new THREE.AmbientLight(16777215,1);scene.add(ambientLight);const directionalLight=new THREE.DirectionalLight(16777215,.5);directionalLight.castShadow=!0,directionalLight.shadow.mapSize.set(1024,1024),directionalLight.shadow.camera.far=15,directionalLight.shadow.camera.left=-7,directionalLight.shadow.camera.top=7,directionalLight.shadow.camera.right=7,directionalLight.shadow.camera.bottom=-7,directionalLight.position.set(-2,2,0),scene.add(directionalLight);const directionalLight2=new THREE.DirectionalLight(16777215,.5);directionalLight2.castShadow=!0,directionalLight2.shadow.mapSize.set(1024,1024),directionalLight2.shadow.camera.far=15,directionalLight2.shadow.camera.left=-7,directionalLight2.shadow.camera.top=7,directionalLight2.shadow.camera.right=7,directionalLight2.shadow.camera.bottom=-7,directionalLight2.position.set(2,2,0),scene.add(directionalLight2);const directionalLight3=new THREE.DirectionalLight(16777215,.5);directionalLight3.castShadow=!0,directionalLight3.shadow.mapSize.set(1024,1024),directionalLight3.shadow.camera.far=15,directionalLight3.shadow.camera.left=-7,directionalLight3.shadow.camera.top=7,directionalLight3.shadow.camera.right=7,directionalLight3.shadow.camera.bottom=-7,directionalLight3.position.set(0,-1,0),scene.add(directionalLight3);const directionalLight4=new THREE.DirectionalLight(16777215,.5);directionalLight4.castShadow=!0,directionalLight4.shadow.mapSize.set(1024,1024),directionalLight4.shadow.camera.far=15,directionalLight4.shadow.camera.left=-7,directionalLight4.shadow.camera.top=7,directionalLight4.shadow.camera.right=7,directionalLight4.shadow.camera.bottom=-7,directionalLight4.position.set(-2,2,-2),scene.add(directionalLight4);const directionalLight5=new THREE.DirectionalLight(16777215,.5);directionalLight5.castShadow=!0,directionalLight5.shadow.mapSize.set(1024,1024),directionalLight5.shadow.camera.far=15,directionalLight5.shadow.camera.left=-7,directionalLight5.shadow.camera.top=7,directionalLight5.shadow.camera.right=7,directionalLight5.shadow.camera.bottom=-7,directionalLight5.position.set(2,2,2),scene.add(directionalLight5);const controls=new OrbitControls(camera,renderer.domElement);controls.update();const geometry=new THREE.BoxGeometry(.001,.001,.001),material=new THREE.MeshBasicMaterial({color:16777215}),mesh=new THREE.Mesh(geometry,material);scene.add(mesh);const animate=()=>{requestAnimationFrame(animate),controls.update(),renderer.setSize(sizes.width,sizes.height),renderer.render(scene,camera),obj&&(obj.rotation.y+=5e-4)};animate();